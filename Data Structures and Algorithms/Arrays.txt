What is an array?

    * Contains elements of a similar type.

    * Elements are stored in contigious memory location.

    * Can store only fixed set of elements.

    * Index based, 1st element is stored in 0th index, 2nd in 1st index and so on.

    * We can store primitive values or objects in an array.


            **********


Advantages:

    * we can retrieve or sort the data efficiently.

    * Random access: We can get any data located at an index position.


            **********


Disadvantages:

    * Size Limit: We can store only the fixed size of elements in the array.

    * It doesn't grow its size at runtime.

    * To solve this problem, collection framework is used in Java which grows automatically.


            **********


Syntax:

    int array [] = new int[5];
        //declaration and instantiation


    int array [] = {33,3,4,5};
        //declaration, instantiation and initialization


            **********


what will be the size of array for : int [] arrayExample

    In Java, when you declare an array like int[] arrayExample;, you are only declaring a reference to an array of integers, not allocating memory for the array itself.

    At this point, arrayExample is simply a reference that can point to an array of integers, but it doesn't actually point anywhere yet.

    To actually create an array and allocate memory for it, you need to instantiate it using the new keyword. For example:

    arrayExample = new int[10];

    This line of code creates an array of integers with a size of 10 and assigns it to arrayExample.

    So, after executing this line, arrayExample will point to an array of size 10.


            **********
